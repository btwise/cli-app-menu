# Â©2016 Copyright 2016 Robert D. Chin
#
# +----------------------------------------+
# |             Revision Date              |
# +----------------------------------------+
# REVDATE="November-07-2014 19:52"
#
# +----------------------------------------+
# |  Function f_menu_cat_sample_template  |
# +----------------------------------------+
#
#  Inputs: None
#    Uses: BXX, MAX
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
# Note: The variable "BXX" is similar to the special comment marker "#BXX".
#       Both must be unique to each (new) menu.
#
# You do not have to include these comments in your menu.
# They are here for your convenient reference.
#
# Format of Menu: 
# "#<Menu item options> <SPACE> <Special menu item marker> <SPACE> <App Name> - <SPACE> <Description>."
#
# Format of menu item options:
# "#f_funct1^f_funct2^f_funct3^Quit-Code^PRESS_KEY #MXX App Name - Description of application."
#   field-1  field-2  field-3  field-4   field-5   Marker 
#
# field 1    *if 1 then function name is f_<MENU_ITEM_NAME>.
# 1/0/string *if <string> then function name is <string>.
#            *if 0 then ignored. No function is run.
#
# fields 2-5 *Generally not used for application category menus.
#
f_menu_cat_sample_template () {
      f_initvars_menu_app "BXX"
      until [ "$BXX" = "0" ]
      do    # Start of <Sample Template> Application Category until loop.
#f_menu_cat_name1 #BXX App1 - This is application category #1.
#f_menu_cat_name2 #BXX App2 - This is application category #2.
            #
            THIS_FILE="<Name of this file or library>"
            MENU_TITLE="<Sample Template> Application Categories Menu"
            DELIMITER="#BXX" #BXX This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read BXX
            f_menu_item_process $BXX  # Outputs $MENU_ITEM.
      done  # End of <Sample Template> Application Category until loop.
            #
      unset BXX MENU_ITEM  # Throw out this variable.
} # End of function f_menu_cat_sample_template
#
# +----------------------------------------+
# |   Function f_menu_app_sample_template  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MXX, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
# You do not have to include these comments in your menu.
# They are here for your convenient reference.
#
# Format of Menu: 
# "#<Menu item options> <SPACE> <Special menu item marker> <SPACE> <App Name> - <SPACE> <Description>."
#
# Format of menu item options:
# "#f_funct1^f_funct2^f_funct3^Quit-Code^PRESS_KEY #MXX App Name - Description of application."
#   field-1  field-2  field-3  field-4   field-5   Marker 
#
# field 1    *if 1 then function name is f_<MENU_ITEM_NAME>.
# 1/0/string *if <string> then function name is <string>.
#            *if 0 then ignored. No function is run.
#
# field 2    *if 1 then function name is f_install_<MENU_ITEM_NAME>.
# 1/0/string  A function to install an application may be specified here.
#            *if <string> then function name is <string>.
#            *if 0 then ignored. No function is run.
#
#             This custom installation function is called only after the distro's software
#             package manager has failed to install the application usually because the
#             application is not pre-packaged for the linux distro (distribution).
#             See f_application_install for more details.
#
#             If install fails, then this custom install function will be run which can be
#             made to download the source code from the application maintainer's web site
#             and then compile and install the application.
#
# field 3    *if <string> then function name is <string>.
# 0/string   *if 0 then ignored. No function is run.
#             This function is run after displaying the Quit-Code the on screen.
#
# field 4    *Quit-Code. See f_quit_app_clause for more details.
# string
#
# field 5    *Sets PRESS_KEY=0/1 to display "Press 'Enter' key to continue".
# 1/0         See f_press_key for more details. This allows the user to see any messages displayed
#             by the application after it has been run. Without PRESS_KEY=1, the screen is cleared
#             for the menu to display and the user would miss any messages.
#
#             This setting may be overridden by any custom functions which follow.
#             It is useful if the custom function displays a help message or man synopsis
#             so you don't have to worry about coding for PRESS_KEY within that custom function.
#
#             This can be used to initialize PRESS_KEY as it is set before any custom functions
#             in fields 1, 2, or 3 are run.
#
f_menu_app_sample_template () {
      f_initvars_menu_app "MXX"
      until [ "$MXX" = "0" ]
      do    # Start of <Sample Template> Applications until loop.
#0^0^0^0^1 #MXX appname  - Description Application1 name.
#0^0^0^0^1 #MXX app2name - Description Application2 name.
#0^0^0^0^1 #MXX MORE...  - For more <Description Applications>.
            #
            THIS_FILE="<Name of this file or library>"
            MENU_TITLE="<Sample Template> Applications Menu"
            DELIMITER="#MXX" #MXX This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MXX
            f_menu_item_process $MXX  # Outputs $MENU_ITEM.
      done  # End of <Sample Template> Applications until loop.
            #
      unset MXX MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_sample_template
#
