# Â©2016 Copyright 2016 Robert D. Chin
#
# +----------------------------------------+
# |             Revision Date              |
# +----------------------------------------+
# REVDATE="February-10-2016 23:59"
#
# +----------------------------------------+
# |      Function f_menu_cat_internet      |
# +----------------------------------------+
#
#  Inputs: $GUI.
#    Uses: None.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_cat_internet () {
      case $GUI in
           dialog | whiptail)
           f_menu_cat_internet_gui
           ;;
           text)
           f_menu_cat_internet_txt
           ;;
      esac
} # End of function f_menu_cat_internet
#
# +----------------------------------------+
# |    Function f_menu_cat_internet_txt    |
# +----------------------------------------+
#
#  Inputs: None.
#    Uses: BIN, MENU_ITEM, MAX
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_cat_internet_txt () {
      f_initvars_menu_app "BIN"
      until [ "$BIN" = "0" ]
      do    # Start of Internet Application Category until loop.
#f_menu_app_bittorrent        #BIN Bittorrent        - File transfer.
#f_menu_app_bloggers          #BIN Blogging Clients  - Blog clients.
#f_menu_app_downloaders       #BIN Downloaders       - Download files, videos. and calculate file checksums.
#f_menu_app_email             #BIN Email             - Email clients.
#f_menu_app_fax               #BIN FAX               - FAX clients.
#f_menu_app_network_file_xfer #BIN FTP/HTTP          - File transfer via FTP, HTTP clients.
#f_menu_app_instant_messaging #BIN IM and Tweets     - Tweet, AIM/ICQ, Yahoo!, MSN, IRC, Jabber/Google Talk...
#f_menu_app_irc_clients       #BIN IRC Clients       - Internet Relay Chat clients.
#f_menu_app_lan_chat          #BIN LAN Chat          - Local Area Network Chat (not IRC).
#f_menu_app_news_readers      #BIN News Readers      - Read news, RSS feeds, Usenet messages.
#f_menu_app_podcatchers       #BIN Podcatcher        - Podcaster readers.
#f_menu_app_remote_connection #BIN Remote Connection - Connect to other PCs remotely, cloud services.
#f_menu_app_web_browsers      #BIN Web Browsers      - Internet web  browsers.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Internet Categories Menu"
            DELIMITER="#BIN" #BIN This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read BIN
            f_menu_item_process $BIN  # Outputs $MENU_ITEM.
      done  # End of Internet Application Category until loop.
            #
      unset BIN MENU_ITEM  # Throw out this variable.
} # End of function f_menu_cat_internet_txt
#
# +----------------------------------------+
# |    Function f_menu_cat_internet_gui    |
# +----------------------------------------+
#
#  Inputs: GUI.
#    Uses: BIN, MENU_TITLE, THIS_FILE.
# Outputs: None.
#
f_menu_cat_internet_gui () {
      f_initvars_menu_app "BIN"
      until [ "$BIN" = "0" ]
      do    # Start of Internet Application Category until loop.
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Internet Categories Menu"
            BIN=$($GUI --title "$MENU_TITLE" --menu "\n\nUse (up/down arrow keys) or (letters):" 20 80 11 \
            "Return"            "Return to previous menu." \
            "Bittorrent"        "File transfer." \
            "Blogging Clients"  "Blog clients." \
            "Downloaders"       "Download files, videos. and calculate file checksums." \
            "Email"             "Email clients." \
            "FAX"               "FAX clients." \
            "FTP/HTTP"          "File transfer via FTP, HTTP clients." \
            "IM and Tweets"     "Tweet, AIM/ICQ, Yahoo!, MSN, IRC, Jabber/Google Talk..." \
            "IRC Clients"       "Internet Relay Chat clients." \
            "LAN Chat"          "Local Area Network Chat (not IRC)." \
            "News Readers"      "Read news, RSS feeds, Usenet messages." \
            "Podcatcher"        "Podcaster readers." \
            "Remote Connection" "Connect to other PCs remotely, cloud services." \
            "Web Browsers"      "Internet web  browsers." \
            2>&1 >/dev/tty)
            #
            case $BIN in
                 "Return") BIN=0 ;;
                 "Bittorrent") f_menu_app_bittorrent ;;
                 "Blogging Clients") f_menu_app_bloggers ;;
                 "Downloaders") f_menu_app_downloaders ;;
                 "Email") f_menu_app_email ;;
                 "FAX") f_menu_app_fax ;;
                 "FTP/HTTP") f_menu_app_network_file_xfer ;;
                 "IM and Tweets") f_menu_app_instant_messaging ;;
                 "IRC Clients") f_menu_app_irc_clients ;;
                 "LAN Chat") f_menu_app_lan_chat ;;
                 "News Readers") f_menu_app_news_readers ;;
                 "Podcatcher") f_menu_app_podcatchers ;;
                 "Remote Connection") f_menu_app_remote_connection ;;
                 "Web Browsers") f_menu_app_web_browsers ;;
            esac
            #
      done  # End of Internet Application Category until loop.
            #
      unset BIN THIS_FILE MENU_TITLE  # Throw out this variable.
} # End of function f_menu_cat_internet_gui
#
# +----------------------------------------+
# |      Function f_menu_app_bittorrent    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MBT, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_bittorrent () {
      f_initvars_menu_app "MBT"
      until [ "$MBT" = "0" ]
      do    # Start of Bittorrent Applications until loop.
#0^0^0^0^1 #MBT aria2c       - Downloader supports BitTorrent/HTTP/HTTPS/FTP/Metalink.
#0^0^0^0^1 #MBT bitflu       - Daemon includes web GUI interface, telnet, plug-ins.
#0^0^0^0^1 #MBT bittornado   - Torrent file transfer.
#0^0^0^0^1 #MBT bittorrent   - Torrent file transfer.
#0^0^0^0^1 #MBT ctorrent     - Torrent file transfer.
#0^0^0^0^1 #MBT deluge       - Torrent downloader, user-interfaces GTK+, web, console.
#0^0^0^0^1 #MBT hefur        - Bittorrent tracker, not a client/downloader; written in C++.
#0^0^0^0^1 #MBT mldonkey     - Downloader supports BitTorrent/eDonkey/HTTP/FTP.
#0^0^0^0^1 #MBT rtorrent     - Torrent file transfer.
#0^0^0^0^1 #MBT transmission - Torrent client web, console, Mac, GTK+ and Qt GUI clients.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Bittorrent Applications Menu"
            DELIMITER="#MBT" #MBT This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MBT
            f_menu_item_process $MBT  # Outputs $MENU_ITEM.
      done  # End of Bittorrent Applications until loop.
            #
      unset MBT MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_bittorrent
#
# +----------------------------------------+
# |      Function f_menu_app_bloggers      |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MDL, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_bloggers () {
      f_initvars_menu_app "MBL"
      until [ "$MBL" = "0" ]
      do    # Start of Bloggers Applications until loop.
#0^0^0^0^1 #MBL blazeblogger - Blogger content management system.
#0^0^0^0^1 #MBL blogger-cli  - Google blogging client.
#0^0^0^0^1 #MBL charm        - Blogging client, LiveJournal, Atom, and MetaWeb (WordPress).
#1^0^0^0^1 #MBL nanoblogger  - Blogger.
#0^0^0^0^1 #MBL wp-cli       - WordPress blogging client.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Blog Applications Menu"
            DELIMITER="#MBL" #MBL This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MBL
            f_menu_item_process $MBL  # Outputs $MENU_ITEM.
      done  # End of Downloader Applications until loop.
            #
      unset MBL MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_bloggers
#
# +----------------------------------------+
# |     Function f_menu_app_downloaders    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MDL, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_downloaders () {
      f_initvars_menu_app "MDL"
      until [ "$MDL" = "0" ]
      do    # Start of Downloaders Applications until loop.
#0^0^0^0^1 #MDL axel       - Downloader accelerator using multiple connections/mirrors.
#0^0^0^0^1 #MDL aria2c     - Downloader supports HTTP/HTTPS/FTP/BitTorrent/Metalink.
#0^0^0^0^1 #MDL cfv        - Create/verify many types of checksum files.
#0^0^0^0^1 #MDL cclive     - Download/Play Youtube videos. Rewrite of 'clive'.
#1^0^0^0^1 #MDL md5pass    - Create a password hash. Usage: md5pass [PASSWORD][SALT]
#1^0^0^0^1 #MDL md5sum     - Display md5 checksum. Usage: md5sum [OPTION] [FILE]
#0^0^0^0^1 #MDL quvi       - Downloads Adobe Flash video links, Youtube etc.
#1^0^0^0^1 #MDL sha1pass   - Create a password hash. Usage: sha1pass [PASSWORD][SALT]
#1^0^0^0^1 #MDL sha1sum    - Display sha1 checksum. Usage: sha1sum [OPTION] [FILE]
#0^0^0^0^1 #MDL yougrabber - Download/Play Youtube videos.
#0^0^0^0^1 #MDL youtube-dl - Download/Play Youtube videos.

            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Downloader-Checksum Applications Menu"
            DELIMITER="#MDL" #MDL This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MDL
            f_menu_item_process $MDL  # Outputs $MENU_ITEM.
      done  # End of Downloader Applications until loop.
            #
      unset MDL MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_downloaders
#
# +----------------------------------------+
# |        Function f_menu_app_email       |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MEM, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_email () {
      f_initvars_menu_app "MEM"
      until [ "$MEM" = "0" ]
      do    # Start of E-mail Applications until loop.
#0^0^0^0^1 #MEM alpine         - E-mail client, FOSS version of pine.
#0^0^0^0^1 #MEM cone           - E-mail client.
#0^0^0^0^1 #MEM elmo           - E-mail client.
#0^0^0^0^1 #MEM fetchyahoo     - E-mail client.
#0^0^0^0^1 #MEM gnus           - E-mail, NNTP, RSS client for Emacs.
#0^0^0^0^1 #MEM heirloom-mailx - E-mail client.
#0^0^0^0^1 #MEM mu4e           - E-mail client for Emacs.
#0^0^0^0^1 #MEM mutt           - E-mail client.
#0^0^0^0^1 #MEM abook          - Address book with or w/o mutt, features tabbed fields.
#0^0^0^0^1 #MEM lbdb           - Little Brother's Database for mutt mail reader.
#0^0^0^0^1 #MEM nedmail        - E-mail client.
#0^0^0^0^1 #MEM pine           - E-mail client.
#0^0^0^0^1 #MEM re-alpine      - E-mail client.
#0^0^0^0^1 #MEM sup            - E-mail client.
#0^0^0^0^1 #MEM urlview        - Extracts URL from email text.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="E-mail Applications Menu"
            DELIMITER="#MEM" #MEM This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MEM
            f_menu_item_process $MEM  # Outputs $MENU_ITEM.
      done  # End of E-mail Applications until loop.
            #
      unset MEM MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_email
#
# +----------------------------------------+
# |         Function f_menu_app_fax        |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFX, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_fax () {
      f_initvars_menu_app "MFX"
      until [ "$MFX" = "0" ]
      do    # Start of FAX Applications until loop.
#0^0^0^0^1 #MFX efax           - FAX over modem.
#0^0^0^0^1 #MFX hylafax-client - Works with HylaFAX server software.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="FAX Applications Menu"
            DELIMITER="#MFX" #MFX This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MFX
            f_menu_item_process $MFX  # Outputs $MENU_ITEM.
      done  # End of FAX Applications until loop.
            #
      unset MFX MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_fax
#
# +----------------------------------------+
# | Function f_menu_app_instant_messaging  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MIM, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_instant_messaging () {
      f_initvars_menu_app "MIM"
      until [ "$MIM" = "0" ]
      do    # Start of Internet Messaging Applications until loop.
#0^0^0^4:NC^1 #MIM barnowl      - BarnOwl supports AIM, IRC, Jabber, Zephyr.
#0^0^0^0^1 #MIM bitlbee      - Jabber, Google Talk, Facebook, ICQ, AIM, MSN, Yahoo! Twitter.
#0^0^0^0^1 #MIM bti          - Tweet to Twitter.com, Identi.ca or any other StatusNet.
#0^0^0^0^1 #MIM centericq    - Supports the ICQ2000, Yahoo, AIM, MSN, IRC and Jabber.
#0^0^0^0^1 #MIM centerim     - Supports the ICQ2000, Yahoo, AIM, MSN, IRC and Jabber.
#0^0^0^0^1 #MIM climm        - Supports ICQ, Jabber, XMPP, GoogleTalk.
#0^0^0^0^1 #MIM ekg2         - IM client supports plug-ins GG, Jabber, IRCs; ncurses, GTK2.
#0^0^0^0^1 #MIM emacs-jabber - Jabber client for Emacs.
#0^0^0^0^0 #MIM finch        - AIM/ICQ, Yahoo, MSN, IRC, Jabber/XMPP/Google Talk, Napster.
#0^0^0^0^1 #MIM freetalk     - Jabber client.
#0^0^0^0^1 #MIM mcabber      - Jabber client.          	
#0^0^0^0^1 #MIM naim         - Supports AIM, IRC, ICQ, Lily, CMC.
#0^0^0^0^1 #MIM turses       - Twitter client, multiple accounts, timelines, and columns.
#0^0^0^0^1 #MIM twidge       - Twitter and identi.ca client.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Instant Messaging Applications Menu"
            DELIMITER="#MIM" #MIM This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MIM
            f_menu_item_process $MIM  # Outputs $MENU_ITEM.
      done  # End of Instant Messaging Applications until loop.
            #
      unset MIM MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_instant_messaging
#
# +----------------------------------------+
# |    Function f_menu_app_irc_clients     |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MIR, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_irc_clients () {
      f_initvars_menu_app "MIR"
      until [ "$MIR" = "0" ]
      do    # Start of IRC Clients Applications until loop.
#0^0^0^0^1 #MIR bitchx  - IRC client.
#0^0^0^0^1 #MIR epic5   - IRC client based on ircI.
#0^0^0^0^1 #MIR erc     - IRC client for Emacs, powerful, modular, and extensible.
#0^0^0^0^1 #MIR ii      - Minimalist FIFO and filesystem-based IRC client. Based on sic.
#0^0^0^0^1 #MIR ircii   - Termcap based interface. Supports "/encrypt -cast".
#0^0^0^0^1 #MIR irssi   - Supports SILC and ICB protocols via plug-ins.
#0^0^0^0^1 #MIR pcw     - Pop-up chat windows, front-end for ii IRC-client.
#0^0^0^0^0 #MIR pork    - Ncurses-based AOL Instant Messenger and IRC client.
#0^0^0^0^1 #MIR scrollz - An advanced, faster IRC client based on ircII code.
#0^0^0^0^1 #MIR sic     - Fast small IRC client.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="IRC Clients Applications Menu"
            DELIMITER="#MIR" #MIR This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MIR
            f_menu_item_process $MIR  # Outputs $MENU_ITEM.
      done  # End of IRC Clients Applications until loop.
            #
      unset MIR MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_irc_clients
#
# +----------------------------------------+
# |      Function f_menu_app_lan_chat      |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MNC, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_lan_chat () {
      f_initvars_menu_app "MNC"
      until [ "$MNC" = "0" ]
      do    # Start of LAN Chat Applications until loop.
#0^0^0^0^1 #MNC talk    - Copies lines from your terminal to that of another user.
#0^0^0^0^1 #MNC weechat - WeeChat (Wee Enhanced Environment for Chat) fast, light client.
#0^0^0^0^1 #MNC ytalk   - Multi-user chat program can do multiple connections.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="LAN Chat Applications Menu"
            DELIMITER="#MNC" #MNC This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MNC
            f_menu_item_process $MNC  # Outputs $MENU_ITEM.
      done  # End of LAN Chat Applications until loop.
            #
      unset MNC MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_lan_chat
#
# +----------------------------------------+
# | Function f_menu_app_network_file_xfer |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MFU, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_network_file_xfer () {
      f_initvars_menu_app "MFU"
      until [ "$MFU" = "0" ]
      do    # Start of Network File Transfer Applications until loop.
#0^0^0^0^1 #MFU cmdftp - File transfer client.
#0^0^0^0^1 #MFU curl   - File transfer, FILE, FTP, FTPS, GOPHER, HTTPS, IMAPS, LDAP, etc.
#0^0^0^0^1 #MFU ftp    - File transfer via Internet standard File Transfer Protocol.
#0^0^0^0^1 #MFU ftpfs  - File transfer client.
#0^0^0^0^1 #MFU lftp   - Sophisticated sftp/ftp/http download/upload client program.
#0^0^0^0^1 #MFU ncftp  - Powerful file transfer client, download directory trees etc.
#0^0^0^0^1 #MFU scp    - Secure Copy file transfer via ssh, asks for password if needed.
#0^0^0^0^1 #MFU woof   - Woof (Web Offer One File) copies files via the HTTP protocol.
#0^0^0^0^1 #MFU wget   - File downloader, HTTP, HTTPS, FTP with auto-retrying on fail.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Network File Transfer Applications Menu"
            DELIMITER="#MFU" #MFU This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MFU
            f_menu_item_process $MFU  # Outputs $MENU_ITEM.
      done  # End of Network File Transfer Applications until loop.
            #
      unset MFU MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_network_file_xfer
#
# +----------------------------------------+
# |     Function f_menu_app_news_readers   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MRM, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_news_readers () {
      f_initvars_menu_app "MRM"
      until [ "$MRM" = "0" ]
      do    # Start of News Reader Applications until loop.
#0^0^0^0^1 #MRM canto      - RSS feeder.
#0^0^0^0^1 #MRM cortex     - Dump news web page to text.
#0^0^0^0^1 #MRM gnus       - News reader and E-mail client for Emacs.
#0^0^0^0^1 #MRM hacker-top - Dump news web page to text.
#0^0^0^0^1 #MRM hdlns      - Display BBC news headlines via RSS feed.
#0^0^0^0^1 #MRM newsbeuter - RSS feeder.
#0^0^0^0^1 #MRM nn         - News reader.
#0^0^0^0^1 #MRM nrss       - RSS feeder.
#0^0^0^0^1 #MRM olive      - RSS feeder.
#0^0^0^0^1 #MRM raggle     - RSS feeder.
#0^0^0^0^1 #MRM rawdog     - RSS feeder.
#0^0^0^0^1 #MRM reddit-top - Dump news web page to text.
#0^0^0^0^1 #MRM rn         - News reader.
#0^0^0^0^1 #MRM rsstail    - RSS feeder.
#0^0^0^0^1 #MRM snownews   - RSS feeder.
#f_menu_app_news_readers2^0^0^0^0 #MRM MORE...      - For more news reader applications.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="News Reader Applications Menu"
            DELIMITER="#MRM" #MRM This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MRM
            f_menu_item_process $MRM  # Outputs $MENU_ITEM.
      done  # End of News Reader Applications until loop.
            #
      unset MRM MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_news_readers
#
# +----------------------------------------+
# |     Function f_menu_app_news_readers2  |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MRN, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_news_readers2 () {
      f_initvars_menu_app "MRN"
      until [ "$MRN" = "0" ]
      do    # Start of News Reader Applications until loop.
#0^0^0^0^1 #MRN slrn       - News reader.
#0^0^0^0^1 #MRN tin        - News reader.
#0^0^0^0^1 #MRN trn        - News reader.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="News Reader2 Applications Menu"
            DELIMITER="#MRN" #MRN This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MRN
            f_menu_item_process $MRN  # Outputs $MENU_ITEM.
      done  # End of News Reader2 Applications until loop.
            #
      unset MRN MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_news_readers2
#
# +----------------------------------------+
# |     Function f_menu_app_podcatchers    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MPO, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_podcatchers () {
      f_initvars_menu_app "MPO"
      until [ "$MPO" = "0" ]
      do    # Start of Podcatcher Applications until loop.
#1^1^0^0^1 #MPO bashpodder - Podcatcher.
#0^0^0^0^1 #MPO goldenpod  - Podcatcher.
#0^0^0^0^1 #MPO hpodder    - Podcatcher.
#0^0^0^0^1 #MPO podget     - Podcatcher.
#0^0^0^0^1 #MPO podracer   - Podcatcher.
#0^0^0^0^1 #MPO uraniacast - Podcatcher.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Podcatcher Applications Menu"
            DELIMITER="#MPO" #MPO This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MPO
            f_menu_item_process $MPO  # Outputs $MENU_ITEM.
      done  # End of Podcatcher Applications until loop.
            #
      unset MPO MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_podcatchers
#
# +----------------------------------------+
# |  Function f_menu_app_remote_connection |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MRC, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_remote_connection () {
      f_initvars_menu_app "MRC"
      until [ "$MRC" = "0" ]
      do    # Start of Remote Connection Applications until loop.
#0^0^0^0^1 #MRC cpu     - Remote connection.
#0^0^0^0^1 #MRC openssh - Remote connection.
#0^0^0^0^1 #MRC grive   - Google Drive client for cloud storage on Google.
#0^0^0^0^1 #MRC ssh     - Remote connection.
#0^0^0^0^1 #MRC sslh    - Remote connection.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Remote Connection Applications Menu"
            DELIMITER="#MRC" #MRC This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MRC
            f_menu_item_process $MRC  # Outputs $MENU_ITEM.
      done  # End of Remote Connection Applications until loop.
            #
      unset MRC MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_remote_connection
#
# +----------------------------------------+
# |    Function f_menu_app_web_browsers    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MWB, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_web_browsers () {
      f_initvars_menu_app "MWB"
      until [ "$MWB" = "0" ]
      do    # Start of Web Browsers Applications until loop.
#f_web_site^0^0^1^0 #MWB elinks     - Web browser, tables, frames, forms support, tabbed browsing.
#0^0^0^1^0          #MWB fbcmd      - Facebook client.
#f_web_site^0^0^1^0 #MWB links      - Web browser, no graphics mode.
#f_web_site^0^0^1^0 #MWB links2     - Web browser, has graphics mode.
#f_web_site^0^0^1^0 #MWB lynx       - Web browser, NLS support.
#0^0^0^1^0          #MWB pastebinit - Send text to web site "pastebin" for public viewing. 
#f_web_site^0^0^1^0 #MWB retawq     - Web browser, multi-threaded.
#0^0^0^0^0          #MWB surfraw    - Search the web using a web search site.
#f_web_site^0^0^1^0 #MWB w3m        - Web browser, tables, frames support, IPv6 support.
            #
            THIS_FILE="mod_apps-internet.lib"
            MENU_TITLE="Web Browser Applications Menu"
            DELIMITER="#MWB" #MWB This 3rd field prevents awk from printing this line into menu options. 
            #
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MWB
            f_menu_item_process $MWB  # Outputs $MENU_ITEM.
      done  # End of Web Browsers Applications until loop.
            #
      unset MWB MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_web_browsers
#
# +----------------------------------------+
# |           Function f_barnowl           |
# +----------------------------------------+
#
f_barnowl () {
      clear # Blank the screen.
      echo "BarnOwl - Internet Messenger."
      echo
      echo "Usage:"
      echo "barnowl"
      echo "Inside barnowl type ':help' (colon help) for built-in help page."
      echo
      echo "*** For more help type: 'man $APP_NAME'"
      echo "                        '$APP_NAME --help'"
      echo
      f_how_to_quit_application ":q (colon q)" "no-clear"
} # End of function f_barnowl
#
# +----------------------------------------+
# |          Function f_bashpodder         |
# +----------------------------------------+
#
f_bashpodder () {
      clear # Blank the screen.
      echo "BashPodder - Internet Podcatcher."
      echo
      echo "Usage:"
      echo "1. cd ~/podcasts"
      echo
      echo "2. Edit configuration file: \"bp.conf\" to include your favorite podcasts."
      echo
      echo "3. Download podcasts by running \"./bashpodder.shell\"."
      echo
      echo "This will store the audio files in sub-directories by date"
      echo "in the format: ~/podcasts/<YYYY-MM-DD>"
      echo
      echo "4. To play downloaded podcasts:"
      echo "You can play the podcasts by using an audio player such as xmms."
      echo "xmms ~/podcasts/2014-11-24/*"
      f_press_enter_key_to_continue
} # End of function f_bashpodder
#

# +----------------------------------------+
# |      Function f_install_bashpodder     |
# +----------------------------------------+
#
f_install_bashpodder () {
      clear # Blank the screen.
      echo "BashPodder - Internet Podcatcher."
      echo
      echo "This script will automatically download and install \"bashpodder\"."
      echo
      echo "This script will do the following:"
      echo "1. Create a sub-directory in your home directory: ~/podcasts."
      echo "2. Download 3 files into that sub-directory."
      echo "3. Make the file executable, bashpodder.shell."
      echo
      echo -n "Press \"Enter\" key to continue."
      read X
      unset X  # Throw out this variable.
      #
      # 1. create a sub-directory in your home directory: ~/podcasts.
      cd ~
      mkdir podcasts
      cd podcasts
      #
      # 2. Download 3 files into that sub-directory.
      f_test_internet_connection
      if [ $ERROR -eq 0 ] ; then
         # OK to download files.
         wget http://lincgeek.org/bashpodder/bashpodder.shell
         wget http://lincgeek.org/bashpodder/parse_enclosure.xsl
         wget http://lincgeek.org/bashpodder/bp.conf
         # 3. Make the file executable, bashpodder.shell.
         chmod 755 bashpodder.shell
         echo "Usage:"
         echo "cd ~/podcasts"
         echo "./bashpodder.shell"
         echo
         echo "This will store the audio files in sub-directories by date"
         echo "in the format: ~/podcasts/<YYYY-MM-DD>"
         echo
         echo "To play downloaded podcasts:"
         echo "You can play the podcasts by using an audio player such as xmms."
         echo "xmms ~/podcasts/2014-11-24/*"
      else
         # Allow viewing of error message no internet connection.
         f_press_enter_key_to_continue
      fi
} # End of function f_install_bashpodder
#
# +----------------------------------------+
# |           Function f_md5pass           |
# +----------------------------------------+
#
f_md5pass () {
      clear # Blank the screen.
      echo "md5pass - Create a password hash."
      echo
      echo "Usage:"
      echo "md5pass [PASSWORD] [SALT]"
      echo
      echo "*** For more help type: 'man md5pass'"
      echo
      echo "md5pass without any SALT value causes a random salt value to be generated."
      echo "Now run md5pass. Usage: 'md5pass'."
      echo
      f_press_enter_key_to_continue
} # End of function f_md5pass
#
# +----------------------------------------+
# |           Function f_md5sum            |
# +----------------------------------------+
#
f_md5sum () {
      # If APP_NAME has no spaces, then neither [OPTIONS] nor file name are specified.
      if [[ ! "$APP_NAME" == *" "* ]] ; then
         clear # Blank the screen.
         echo "md5sum - Display md5 checksum."
         echo
         echo "Usage:"
         echo "md5sum [OPTION]... [FILE]..."
         echo
         echo "*** For more help type: 'man md5sum'"
         echo "                        'md5sum --help'"
         echo
         echo "Now show help. Usage: man md5sum"
         f_press_enter_key_to_continue
         APP_NAME="man md5sum"
      fi
} # End of function f_md5sum
#
# +----------------------------------------+
# |         Function f_nanoblogger         |
# +----------------------------------------+
#
f_nanblogger () {
      APP_NAME_TMP=$MENU_ITEM # Save jed <OPTIONS>.
      APP_NAME="nanoblogger-extra"  # Install jed-extra package before running/installing jed.
      f_application_install_question
      APP_NAME=$APP_NAME_TMP
      PRESS_KEY=0 # Do not display "Press 'Enter' key to continue."
} # End of function f_nanoblogger
#
# +----------------------------------------+
# |           Function f_sha1pass          |
# +----------------------------------------+
#
f_sha1pass () {
      clear # Blank the screen.
      echo "sha1pass - Create a password hash."
      echo
      echo "Usage:"
      echo "sha1pass [PASSWORD] [SALT]"
      echo "*** For more help type: 'man sha1pass'"
      echo
      echo "sha1pass without any SALT value causes a random salt value to be generated."
      echo "Now run sha1pass. Usage: 'sha1pass'."
      echo
      f_press_enter_key_to_continue
} # End of function f_sha1pass
#
# +----------------------------------------+
# |           Function f_sha1sum           |
# +----------------------------------------+
#
f_sha1sum () {
      # If APP_NAME has no spaces, then neither [OPTIONS] nor file name are specified.
      if [[ ! "$APP_NAME" == *" "* ]] ; then
         clear # Blank the screen.
         echo "sha1sum - Display sha1 checksum."
         echo
         echo "Usage:"
         echo "sha1sum [OPTION]... [FILE]..."
         echo
         echo "*** For more help type: 'man sha1sum'"
         echo "                        'sha1sum --help'"
         echo
         echo "Now show help. Usage: man sha1sum"
         echo
         f_press_enter_key_to_continue
         APP_NAME="man sha1sum"
      fi
} # End of function f_sha1sum
#
# +----------------------------------------+
# |          Function f_web_site           |
# +----------------------------------------+
#
#  Inputs: APP_NAME.
# Outputs: APP_NAME, WEB_SITE.
#
f_web_site () {
case $APP_NAME in # Start of case statement.
     #
     # The order of the case pattern matching clauses is necessary.
     #
     # Does $APP_NAME start with 'sudo'?
     # Does $APP_NAME have no spaces?
     # If so, treat as a web browser without a specified web site.
     #
     'sudo '*' '* | *' '*) # Command has at least one space.
     # It is assumed that users who do "sudo <application name> <options>"
     # know what they are doing and do not need to be prompted to provide
     # a web site and do not call f_web_site in the application case statments.
     # i.e. "sudo nslookup www.lxer.com"
     #
     # This case pattern matching statement will allow any other sudo formats
     # i.e. For links browser, "sudo -width 80 links -driver atheos -html-images 0".
     #
     ;;
     *[!' ']*) # It has no spaces in name. No spaces means no web site specified.
     echo
     echo "When using a web browser or network application directly from the command line,"
     echo "use the syntax: $APP_NAME WEB_SITE"
     echo
     echo -n "Enter the name of the web site (i.e. www.lxer.com): "
     read WEB_SITE
     #
     # If no web site specified, default to a web site. Note the test command
     # has $WEB_SITE in quotes because it may not be set prior to this test.
     if [ -z "$WEB_SITE" ] ; then
         WEB_SITE="http://www.lxer.com"
     fi
     #
     APP_NAME="$APP_NAME $WEB_SITE"
     ;;
esac # End of case statement.
} # End of function f_web_site
#
