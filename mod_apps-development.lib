# Â©2019 Copyright 2019 Robert D. Chin
#
# +----------------------------------------+
# |             Revision Date              |
# +----------------------------------------+
# REVDATE="January-21-2015 11:52"
#
# +----------------------------------------+
# |     Function f_menu_app_development    |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MDE, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_development () {
      f_initvars_menu_app "MDE"
      until [ "$MDE" = "0" ]
      do    # Start of Development Applications until loop.
#0^0^0^0^1 #MDE aphex            - Tiny hex editor. edits are written immediately, no undo.
#0^0^0^0^1 #MDE apropos          - Search Linux man(ual) files for a forgotten command.
#0^0^0^0^1 #MDE bugz             - Interface to Bugzilla bug tracking tool.
#0^0^0^0^1 #MDE checkbashisms    - Check /bin/sh scripts for bash-specific constructs.
#0^0^0^0^1 #MDE cil              - Issue tracker and add/edit, list issues.
#0^0^0^0^1 #MDE cmdtest          - Test command-line programs/scripts to check the output.
#0^0^0^0^1 #MDE codemetre        - Count lines of code w/o comments in source code.
#0^0^0^0^0 #MDE colout           - Colorize matching text pattern in a text file.
#0^0^0^0^1 #MDE gettext          - Framework for GNU packages for multi-lingual messages.
#0^0^0^0^1 #MDE githubcli        - "ghi" Interface to GitHub's issues API.
#0^0^0^0^1 #MDE google-perftools - Analyze performance of C++ programs.
#0^0^0^0^1 #MDE gprof            - Code profiling, detect performance bottlenecks, etc.
#0^0^0^0^1 #MDE groff            - Enhanced troff editor writes to man page format.
#0^0^0^0^1 #MDE linkchecker      - Check if web page links are working.
#0^0^0^0^1 #MDE man2html         - Browse man pages using a web browser.
#f_menu_app_development2^0^0^0^1 #MDE MORE...          - For more development applications.
            #
            THIS_FILE="mod_apps-development.lib"
            MENU_TITLE="Development Applications Menu"
            DELIMITER="#MDE" #MDE This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MDE
            f_menu_item_process $MDE  # Outputs $MENU_ITEM.
      done  # End of Development Applications until loop.
            #
      unset MDE MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_development
#
# +----------------------------------------+
# |     Function f_menu_app_development2   |
# +----------------------------------------+
#
#  Inputs: None. 
#    Uses: MDF, MENU_ITEM, MAX.
# Outputs: ERROR, MENU_TITLE, DELIMITER.
#
f_menu_app_development2 () {
      f_initvars_menu_app "MDF"
      until [ "$MDF" = "0" ]
      do    # Start of Development Applications until loop.
#0^0^0^0^1 #MDF man2html-base   - Convert man pages into HTML format.
#0^0^0^0^1 #MDF mantis          - Web-based issue tracker runs in PHP.
#0^0^0^0^1 #MDF nl              - Insert line numbers into a text file.
#0^0^0^0^1 #MDF shelltestrunner - Test command-line programs/scripts, runs parallel tests.
#0^0^0^0^1 #MDF sloccount       - SLOCCount counts source lines of code for 29 languages.
#0^0^0^0^1 #MDF stx2any         - Markup language, writes to man page format.
#0^0^0^0^1 #MDF txt2man         - Converts plain ASCII text to man format.
#1^0^0^0^1 #MDF ldd             - Print shared library dependencies.
#0^0^0^0^1 #MDF udo             - Simpler markup language writes to man page format.
            #
            THIS_FILE="mod_apps-development.lib"
            MENU_TITLE="Development2 Applications Menu"
            DELIMITER="#MDF" #MDF This 3rd field prevents awk from printing this line into menu options. 
            f_show_menu "$MENU_TITLE" "$DELIMITER" 
            read MDF
            f_menu_item_process $MDF  # Outputs $MENU_ITEM.
      done  # End of Development2 Applications until loop.
            #
      unset MDF MENU_ITEM  # Throw out this variable.
} # End of function f_menu_app_development2
#
# +----------------------------------------+
# |            Function f_ldd              |
# +----------------------------------------+
#
f_ldd () {
      # If APP_NAME has no spaces, then neither [OPTIONS] nor file name are specified.
      if [[ ! "$APP_NAME" == *" "* ]] ; then
         clear # Blank the screen.
         echo "ldd -  print shared library dependencies."
         echo "USAGE:"
         echo "       ldd [OPTION]... FILE..."
         echo
         echo "DESCRIPTION:"
         echo "       ldd  prints  the  shared  libraries  required by each program or shared"
         echo "       library specified on the command line."
         echo
         echo "OPTIONS:"
         echo "       -v --verbose"
         echo "              Print all information, including, for example, symbol versioning"
         echo "              information."
         echo "       -u --unused"
         echo "              Print unused direct dependencies.  (Since glibc 2.3.4.)"
         echo "       -d --data-relocs"
         echo "              Perform relocations and report any missing objects (ELF only)."
         echo "       -r --function-relocs"
         echo "              Perform relocations for both data  objects  and  functions,  and"
         echo "              report any missing objects or functions (ELF only)."
         echo "       --help Usage information."
         f_press_enter_key_to_continue
      fi
} #End of function f_ldd
#

